/**
 * ChaiLove: Pong
 */
global players = []
global pongSound
global ball

/**
 * ChaiLove callback; Load the application.
 */
def load() {
  love.graphics.setBackgroundColor(40, 42, 54);
  pongSound = love.sound.newSoundData("pong.wav")

  ballReset()

  love.filesystem.load("Player.chai")
  players = [
    Player(false, 80.0f, love.graphics.getHeight() / 2.0f),
    Player(true, love.graphics.getWidth() - 80.0f, love.graphics.getHeight() / 2.0f)
  ]
}

/**
 * ChaiLove callback; Draw the game state.
 */
def draw() {
  for (var i = 0; i < 2; ++i) {
    players[i].draw()
  }
  love.graphics.setColor(80, 250, 123);
  love.graphics.circle("fill", ball["x"], ball["y"], ball["radius"]);
}

/**
 * ChaiLove callback; Update the game state.
 */
def update(delta) {
  for (var i = 0; i < 2; ++i) {
    players[i].update(delta)
  }

  if (ball["yspeed"] < 0) {
    if (ball["y"] < 0) {
        ball["yspeed"] *= -1;
    }
  }
  else if (ball["yspeed"] > 0) {
    if (ball["y"] > love.graphics.getHeight()) {
        ball["yspeed"] *= -1;
    }
  }
  if (ball["x"] < 0) {
    players[1].score += 1
    ballReset()
  }
  else if (ball["x"] > love.graphics.getWidth()) {
    players[0].score += 1
    ballReset()
  }

  if (ball["xspeed"] <= 0) {
    if (ballCollide(players[0])) {
      ball["xspeed"] *= -1
    }
  }
  else {
    if (ballCollide(players[1])) {
      ball["xspeed"] *= -1
    }
  }

  ball["x"] += ball["xspeed"] * delta
  ball["y"] += ball["yspeed"] * delta
}

/**
 * Reset the ball.
 */
def ballReset() {
  ball = [
    "x": love.graphics.getWidth() / 2.0f,
    "y": love.graphics.getHeight() / 2.0f,
    "xspeed": 200.0f,
    "yspeed": 100.0f,
    "radius": 5
  ]
}

/**
 * Check the ball collision.
 */
def ballCollide(player) {
  if (ball["y"] + ball["radius"] <= player.y) {
    return false
  }
  if (ball["y"] - ball["radius"]>= player.y + player.height) {
    return false
  }
  if (ball["x"] + ball["radius"] <= player.x) {
    return false
  }
  if (ball["x"] - ball["radius"] > player.x + player.width) {
    return false
  }

  // The ball hit.
  ball["xspeed"] *= 1.1f
  if (ball["yspeed"] > 0) {
    if (ball["y"] < player.y + player.height / 4) {
      ball["yspeed"] *= -1
    }
  }
  else if (ball["yspeed"] < 0) {
    if (ball["y"] > player.y + player.height / 2 + player.height / 4) {
      ball["yspeed"] *= -1
    }
  }

  // Make a sound.
  love.audio.play(pongSound)
  return true
}
